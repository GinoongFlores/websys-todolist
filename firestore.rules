rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Reusable function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Reusable function to check if the userId matches the authenticated user
    function isUserOwner(userId) {
      return isAuthenticated() && userId == request.auth.uid;
    }

    // Rules for the todos collection
    match /todos/{todoId} {
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.keys().hasAll(['text', 'completed', 'userId', 'timestamp'])
        && request.resource.data.text is string
        && request.resource.data.completed is bool
        && request.resource.data.userId is string
        && request.resource.data.timestamp is timestamp;

      allow read: if isAuthenticated()
        && resource.data.userId == request.auth.uid;

      allow update: if isAuthenticated()
        && resource.data.userId == request.auth.uid
        && request.resource.data.userId == resource.data.userId
        && request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['completed', 'text']);

      allow delete: if isAuthenticated()
        && resource.data.userId == request.auth.uid;
    }

    // Deny access to any other collection by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}